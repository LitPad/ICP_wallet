type Wallet = 
    record {
    user_id: text;
    balance: nat64;
    transaction: vec Transaction;
    address: text;
    created_at: nat64;
    updated_at: nat64;
};

type Transaction = 
    record {
    from: text;
    to: text;
    amount: nat64;
    narration: text;
    created_at: nat64;
};

type TransferRequest = record {
  to: text;      // Target account identifier
  amount: nat64; // Amount in e8s (1 ICP = 10^8 e8s)
};

type BalanceRequest = record {
  account: text; // Account identifier
};

type TransferResponse = record {
  block_index: opt nat64; // Ledger block index for the transfer
  error: opt text;        // Error message, if any
};

type BalanceResponse = record {
  balance: nat64; // Balance in e8s
  error: opt text; // Error message, if any
};

service: {
    create_wallet: (text) -> (Wallet);
    fund_wallet: (text, nat64) -> (nat64, Transaction);
    get_balance: (text) -> (nat64) query;
    make_payment: (text, nat64) -> (bool);
    get_transaction_history: (text) -> (vec Transaction) query;
    withdraw: (nat64) -> (bool);
    get_wallet: (text) -> (vec Wallet) query;

    // Interacting with the ICP itself
    check_icp_balance: (text) -> (BalanceResponse) query;
    transfer_icp: (text, text, nat64) -> (TransferResponse);
}